name: Build for Win64

on: [push, pull_request]

env:
  CACHE_VERSION_WIN64: 3
  DEBIAN_FRONTEND: noninteractive
  HOMEBREW_NO_AUTO_UPDATE: 1
  PAWPAW_FAST_MATH: 1
  PAWPAW_SKIP_LTO: 1
  PAWPAW_SKIP_TESTS: 1
  RELEASE_OS_WIN64: ubuntu:22.04

jobs:
  win64:
    strategy:
      matrix:
        include:
          # FIXME enable and use debian:12 for releases
          #- container: debian:12
          - container: ubuntu:22.04
          #- container: ubuntu:23.10
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.container }}
    steps:
      - name: Update git
        run: |
          apt-get update -qq && apt-get install -yqq git
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up dependencies
        run: |
          ./src/PawPaw/.github/workflows/bootstrap-deps.sh win64
          apt-get install -yqq libfreetype-dev libx11-dev libxcursor-dev libxext-dev libxrandr-dev libxrender-dev p7zip-full unzip wget xdg-user-dirs xvfb zip
      - name: Set up cache
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/PawPawBuilds
          key: win64-${{ env.PAWPAW_PACK_NAME }}-v${{ env.CACHE_VERSION_WIN64 }}
      - name: Build dependencies
        run: |
          ./src/PawPaw/bootstrap-mod.sh win64 && ./src/PawPaw/.cleanup.sh win64
      - name: Build
        if: steps.cache.outputs.cache-hit == 'true'
        run: |
          make win64
      - name: Validate plugins
        if: steps.cache.outputs.cache-hit == 'true'
        run: |
          ./utils/plugin-builder/validate-plugins.sh
          # FIXME dirty carla leaves temp folders around
          rm -rf *.tmp
      - name: Set version tag for release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo "VERSION_TAG=$(cat VERSION)" >> $GITHUB_ENV
      - name: Set version tag for non-release
        if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo "VERSION_TAG=$(echo ${{ github.event.pull_request.number || github.sha }} | cut -c1-8)" >> $GITHUB_ENV
      - name: Pack
        if: steps.cache.outputs.cache-hit == 'true'
        run: |
          xvfb-run ./utils/win64/win64-installer.sh
          ./utils/win64/win64-zip.sh
          if [ "${{ env.VERSION_TAG }}" != "$(cat VERSION)" ]; then
            mv mod-desktop-*.exe mod-desktop-${{ env.VERSION_TAG }}-win64.exe
            mv mod-desktop-*.zip mod-desktop-${{ env.VERSION_TAG }}-win64.zip
          fi
      - uses: actions/upload-artifact@v4
        if: ${{ matrix.container == env.RELEASE_OS_WIN64 }}
        with:
          name: mod-desktop-${{ env.VERSION_TAG }}-win64
          path: |
            *.exe
            *.zip
      - uses: softprops/action-gh-release@v1
        if: ${{ matrix.container == env.RELEASE_OS_WIN64 && startsWith(github.ref, 'refs/tags/') }}
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            *.exe
